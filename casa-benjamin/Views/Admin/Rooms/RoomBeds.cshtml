@model List<RoomBed>
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    var r = UserManager.Instance.GetRooms().First(x => x.id == (int)ViewBag.RoomId);
}

<div class="row clearfix">

    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">

        <div class="card">
            <div class="header">
                <a href="/admin/rooms" class="pull-left-rmargin"> <i class="material-icons">keyboard_backspace</i></a>

                <h2>
                    @I18n.T("Room") @r.id - @I18n.T("Beds")
                </h2>
            </div>
            <div class="body">
                <div class="table-responsive">
                    <table class="table table-bordered table-striped table-hover js-responsive-table dataTable" cellspacing="0">
                        <thead>
                            <tr>
                                <th data-order="asc">@I18n.T("Bed")</th>
                                <th>@I18n.T("Bed Type")</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @{ 
                                var beds = UserManager.Instance.GetBeds();
                                foreach (var member in Model.OrderBy(x => x.bed_id))
                                {
                                    var bed = beds.First(x => x.id == member.bed_id);
                                    var room = CacheManager.Instance.Rooms.First(x => x.room.id == member.room_id).room;
                                <tr>
                                    <td>@bed.id</td>
                                    <td>@bed.bed_type_id.ToString()</td>
                                    <td><a onclick="return confirm('@I18n.T("Are you sure?")')" href="/admin/roombeddelete?currentRoomId=@ViewBag.RoomId&roombedid=@member.id&bedid=@member.bed_id">@I18n.T("Delete")</a></td>
                                </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
                <div class="row">
                    <button data-toggle="modal" data-target="#categoryAdd" type="button" class="btn btn-danger btn-circle-lg waves-effect waves-circle waves-float pull-right">
                        <i class="material-icons">add_circle</i>
                    </button>
                </div>
            </div>
        </div>
        <div class="modal fade" id="categoryAdd" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title" id="defaultModalLabel">@I18n.T("Add Bed To Room") @r.id</h4>
                    </div>
                    <div class="modal-body">
                        <form action="/admin/roombedadd" method="post">
                            <input type="hidden" value="@r.id" name="roomId" />
                            <div class="row clearfix">                                
                                <div class="col-lg-4 col-xs-12">
                                    <label for="room_id">@I18n.T("Bed")</label>
                                    <div class="form-group">
                                        <div class="form-line">
                                            <select name="bedid" class="form-control select2 show-tick" data-live-search="true">
                                                @{ 
                                                    List<Bed> availableBeds = beds;
                                                    List<RoomBed> allRoomBeds = UserManager.Instance.GetRoomBeds();

                                                    if(allRoomBeds.Count > 0)
                                                    {
                                                        List<int> takenBeds = allRoomBeds.Select(x => x.bed_id).ToList();
                                                        availableBeds = beds.Where(x => !takenBeds.Contains(x.id)).OrderBy(x=> x.id).ToList();
                                                    }
                                                }
                                                
                                                @foreach (var item in availableBeds)
                                                {
                                                    string type = ((BedType)item.bed_type_id).ToString();
                                                    <option value="@item.id">@item.id (@type)</option>
                                                }
                                            </select>

                                        </div>
                                    </div>
                                </div>                               
                            </div>
                            <div class="row">
                                <div class="col-lg-12">
                                    <div class="form-group">
                                        <button type="submit" class="btn btn-link waves-effect">@I18n.T("SAVE").ToUpper()</button>
                                        <button type="button" class="btn btn-link waves-effect" data-dismiss="modal">@I18n.T("CLOSE").ToUpper()</button>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
